---
import { Image } from 'astro:assets'
import { getImage } from '@utils/image'
import { Icon } from 'astro-icon/components'

interface Props {
  icon?: string
  title?: string
  content?: string
  image?: string
  location?: string
}

const { icon, title, content, image, location } = Astro.props

const getIconName = (path: string = '') => {
  return path.split('/').pop()?.replace('.svg', '') || ''
}

const processedImage = image ? await getImage(image) : null
---

<section class="grid h-min w-full grid-cols-8 grid-rows-[min-content] justify-center gap-3 overflow-visible px-6 md:px-0" id="profile">
  <div class="col-span-8 aspect-[3/4] w-full overflow-hidden rounded-2xl md:col-span-3" data-in="zoomIn">
    {
      processedImage && (
        <Image
          src={processedImage}
          alt={title ?? 'Profile Image'}
          widths={[280, 448, 640, 960, 1280]}
          sizes="(min-width: 1280px) 33vw, (min-width: 768px) 50vw, 100vw"
          width={360}
          height={480}
          crossorigin="anonymous"
          referrerpolicy="no-referrer"
          loading="eager"
          decoding="async"
          fetchpriority="high"
          class="h-full w-full object-cover"
          format="webp"
          quality={75}
        />
      )
    }
  </div>
  <div class="col-span-8 rounded-2xl border border-neutral-200 bg-white p-6 md:col-span-5" data-in="zoomIn">
    <div class="mb-8 inline-block rounded-lg border border-neutral-200 bg-neutral-100 p-3">
      {icon && <Icon name={getIconName(icon)} class="h-6 w-6 text-content" />}
    </div>
    <h1 class="mb-4 text-xl font-medium">{title}</h1>
    <p class="text-sm font-medium text-content">{content}</p>
    {
      location && (
        <div class="mt-6 flex flex-row items-center gap-1 text-xs text-content">
          <Icon name="location" class="h-4 w-4" />
          {location}
        </div>
      )
    }
  </div>
</section>
